@inherits Umbraco.Web.Mvc.UmbracoViewPage<dynamic>
@using System.Linq
@using Umbraco.Web
@using Umbraco.Core.Models.PublishedContent
@using Umbraco.Web.Models

@{
    var contentElement  = (IPublishedElement)Model;
    var moduleHeading   = contentElement.Value<string>("heading");
    var moduleDesc      = contentElement.Value<string>("description");
    var page            = Umbraco.AssignedContentItem;
    var items           = page
      .Children
      .Where(x => x.ContentType.Alias == "restaurantsBarsDetailPage")
      .ToList();
    var bars = contentElement.Value<IEnumerable<IPublishedContent>>("restaurantBar") ?? Enumerable.Empty<IPublishedContent>();
}

<div class='foodies-intro text-center mb-5'>
    <div class='container'>
        @if (!string.IsNullOrWhiteSpace(moduleHeading))
        {
          <h2 class='display-4 mb-3'>@moduleHeading</h2>
        }
        @if (!string.IsNullOrWhiteSpace(moduleDesc))
        {
            <div class="block__description intro__description">
                    @Html.Raw(moduleDesc)
            </div>
        }
        <ul class="accommodation-sliderfilter__tabs d-flex align-items-center justify-content-center flex-wrap">
            <li data-filter="restaurants" class="accommodation-sliderfilter__tabs-btn btn active">@Umbraco.GetDictionaryValue("hungry")</li>
            <li data-filter="bars" class="accommodation-sliderfilter__tabs-btn btn">@Umbraco.GetDictionaryValue("thirsty") </li>
        </ul>
  </div>
</div>

<div class="upcoming-events__section">
    <div class="upcoming-events__wrap">
        <div class="container">
           @if (bars.Any())
            {
                <div class='foodies-block upcoming-events__content gridfilter__items'>
                    @foreach (var bar in bars)
                    {
                        var img = bar.Value<IPublishedContent>("featuredImage");
                        var url = img != null
                                  ? img.GetCropUrl(width: 536, height: 536)
                                  : null;
                        var raw = bar.Value<string>("restaurantType");
                        var type = string.IsNullOrWhiteSpace(raw) ? "Cuisine" : raw;
                        var rawCategory = bar.Value<string>("restaurantsBarsCategory");
                        var category    = string.IsNullOrWhiteSpace(rawCategory)
                                          ? "Cuisine"
                                          : rawCategory;
            
                        <div class='gridfilter__item @category.ToLower()'>
                            <div class='gridfilter__item-image'>
                                @if (!string.IsNullOrEmpty(url))
                                {
                                    <img src='@url' alt='@img.Name' class='img-fluid' />
                                }
                            </div>
                            <div class='gridfilter__item-content'>
                                @if (!string.IsNullOrWhiteSpace(type))
                                {
                                    <div class="gridfilter__item-date">@type</div>
                                }
                                <div class='gridfilter__item-title'>@bar.Name</div>
                                <div class='gridfilter__item-description'>
                                    @Html.Raw(bar.Value<string>("shortDescription"))
                                </div>
                                <div class='gridfilter__item-button'>
                                    <a href='@bar.Url()' class='btn btn-outline-black'>
                                        @Umbraco.GetDictionaryValue("Read more")
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

        </div>
    </div>
    <div class="divider divider-gray"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var gridItems = document.querySelectorAll('.gridfilter__item');
  var buttons   = document.querySelectorAll('.accommodation-sliderfilter__tabs-btn');
  window.setTimeout(function(){
      gridItems.forEach(function(item) {
        item.style.display = 'block';
      });
  },300)

  buttons.forEach(function(btn) {
    btn.addEventListener('click', function() {
      var filter = btn.getAttribute('data-filter');

      // show/hide items
      gridItems.forEach(function(item) {
        if (filter === 'all' || item.classList.contains(filter)) {
          item.style.display = '';
        } else {
          item.style.display = 'none';
        }
      });
    });
  });
});
</script>

